{
  "name": "bach_domain_report:_1_domain copy",
  "nodes": [
    {
      "parameters": {
        "content": "## Data extraction\n",
        "height": 520.8658476268888,
        "width": 1140.757334195656
      },
      "id": "8e3cfc7e-6389-4244-bf89-3911ab779902",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        540,
        80
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.WhoisRecord.dataError }}",
              "value2": "MISSING_WHOIS_DATA"
            }
          ]
        }
      },
      "id": "98adbd08-5fc4-4c15-87fc-089e9852a8b7",
      "name": "IF MISSING_WHOIS_DATA",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        440,
        1640
      ]
    },
    {
      "parameters": {},
      "id": "2e261f50-3a73-49c2-aeb5-e8f11322f5da",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2760,
        1400
      ]
    },
    {
      "parameters": {},
      "id": "155e29b4-a09e-4c24-a9ba-48df76f7e5b2",
      "name": "input",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        100,
        440
      ]
    },
    {
      "parameters": {
        "content": "# Domain whois extraction and ETL (not an executable flow)\n\n## input:\n- from input: domain_name_to_test\n\n## parameters:\n- whoisxmlapi_api_key\n- debug: debug_name_to_test\n\n## output:\n- HTML fragment text",
        "height": 394.5455101766545,
        "width": 1626.2510790844776
      },
      "id": "e6822a93-149d-42fd-8b51-2c23be9bb2e4",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        -332.8509020280691
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domainName",
              "stringValue": "={{ $json.WhoisRecord.domainName }}"
            },
            {
              "name": "dataError",
              "stringValue": "={{ $json.WhoisRecord.registryData.dataError }}"
            },
            {
              "name": "registrant_country",
              "stringValue": "={{ $json.WhoisRecord.registryData.registrant.country }}"
            },
            {
              "name": "createdDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.createdDateNormalized }}"
            },
            {
              "name": "updatedDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.updatedDateNormalized }}"
            },
            {
              "name": "expiresDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.expiresDateNormalized }}"
            },
            {
              "name": "html_button_type",
              "stringValue": "danger"
            },
            {
              "name": "whois_xml_response",
              "stringValue": "={{ $('HTTP_Request').item.json.data.replace(/[\\r\\n]+/g,'\\\\n')  }}"
            },
            {
              "name": "domain_name_to_test_transformation_no_dot",
              "stringValue": "={{ $('combined_flow_data').item.json[\"domain_name_to_test_transformation_no_dot\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4f1ea8f9-b700-4b31-aac8-94995cc620a3",
      "name": "ETL3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        1320,
        1100
      ]
    },
    {
      "parameters": {
        "html": "\n\n<div class=\"row\">\n    <div class=\"col-md-10 col-lg-8 w-100\">\n        <button\n            class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-{{ $json.html_button_type }}\"\n            data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\" aria-expanded=\"true\">\n            <h5 class=\"post-title\">\n                {{ $json.domainName }} Domain error 002\n            </h5>\n        </button>\n        <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\">\n            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                <li>\n              sem dados\n                </li>\n                <li class=\"mb-1\">\n                    <button class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-outline-dark\"\n                        data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\"\n                        aria-expanded=\"false\">\n                        Full XML API response\n                    </button>\n                    <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\">\n                        <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                        \n                            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                                <li > \n\n                                   <div class=\"text-wrap\">  \n\n                                        <!-- Restante do seu conteúdo vai aqui -->\n                                        <pre id=\"xml-container_{{ $json.domain_name_to_test_transformation_no_dot }}\"></pre>\n\n                                        <script>\n                                            var xmlString ='  {{ $json.whois_xml_response }} ';\n\n                                            // Função para destacar as partes do XML\n                                            function highlightXML(xmlString) {\n                                                return xmlString.replace(/<([^\\s>]+)([^>]*)>([^<]*)<\\/\\1>/g, function (match, tag, attributes, text) {\n                                                    var highlightedTag = '<span class=\"xml-tag\">&lt;' + tag + '</span>';\n                                                    var highlightedAttributes = attributes ? '<span class=\"xml-attribute\">' + attributes + '</span>' : '';\n                                                    var highlightedText = text ? '<span class=\"xml-text\">' + text + '</span>' : '';\n                                                    return highlightedTag + highlightedAttributes + highlightedText + '<span class=\"xml-tag\">&lt;/' + tag + '&gt;</span>';\n                                                });\n                                            }\n                                            // Exibe o XML na página com destaque\n                                            document.getElementById('xml-container_{{ $json.domain_name_to_test_transformation_no_dot }}').innerHTML = highlightXML(xmlString);  \n\n                                        </script>\n                                    </div>\n\n\n                                </li>\n                            </ul>\n\n                        </ul>\n\n\n                    </div>\n                </li>\n            </ul>\n        </div>\n\n        <hr style=\"margin-top: 0.3rem; margin-bottom: 0.3rem;\">\n    </div>\n</div>"
      },
      "id": "59886503-0ca3-4a96-9a20-aceb4a40d330",
      "name": "HTML",
      "type": "n8n-nodes-base.html",
      "typeVersion": 1,
      "position": [
        800,
        1620
      ]
    },
    {
      "parameters": {
        "html": "\n\n<div class=\"row\">\n    <div class=\"col-md-10 col-lg-8 w-100\">\n        <button\n            class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-{{ $json.html_button_type }}\"\n            data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\" aria-expanded=\"true\">\n            <h5 class=\"post-title\">\n                {{ $json.domainName }} Domain error: 001\n            </h5>\n        </button>\n        <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\">\n            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                <li>\n              sem dados\n                </li>\n                <li class=\"mb-1\">\n                    <button class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-outline-dark\"\n                        data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\"\n                        aria-expanded=\"false\">\n                        Full XML API response\n                    </button>\n                    <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\">\n                        <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                        \n                            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                                <li > \n\n                                   <div class=\"text-wrap\">  \n\n                                        <!-- Restante do seu conteúdo vai aqui -->\n                                        <pre id=\"xml-container_{{ $json.domain_name_to_test_transformation_no_dot }}\"></pre>\n\n                                        <script>\n                                            var xmlString ='  {{ $json.whois_xml_response }} ';\n\n                                            // Função para destacar as partes do XML\n                                            function highlightXML(xmlString) {\n                                                return xmlString.replace(/<([^\\s>]+)([^>]*)>([^<]*)<\\/\\1>/g, function (match, tag, attributes, text) {\n                                                    var highlightedTag = '<span class=\"xml-tag\">&lt;' + tag + '</span>';\n                                                    var highlightedAttributes = attributes ? '<span class=\"xml-attribute\">' + attributes + '</span>' : '';\n                                                    var highlightedText = text ? '<span class=\"xml-text\">' + text + '</span>' : '';\n                                                    return highlightedTag + highlightedAttributes + highlightedText + '<span class=\"xml-tag\">&lt;/' + tag + '&gt;</span>';\n                                                });\n                                            }\n                                            // Exibe o XML na página com destaque\n                                            document.getElementById('xml-container_{{ $json.domain_name_to_test_transformation_no_dot }}').innerHTML = highlightXML(xmlString);  \n\n                                        </script>\n                                    </div>\n\n\n                                </li>\n                            </ul>\n\n                        </ul>\n\n\n                    </div>\n                </li>\n            </ul>\n        </div>\n\n        <hr style=\"margin-top: 0.3rem; margin-bottom: 0.3rem;\">\n    </div>\n</div>"
      },
      "id": "563f1aa6-5df4-448f-bb93-4b1dadd32a6a",
      "name": "HTML1",
      "type": "n8n-nodes-base.html",
      "typeVersion": 1,
      "position": [
        1180,
        1840
      ]
    },
    {
      "parameters": {
        "html": "\n\n<div class=\"row\">\n    <div class=\"col-md-10 col-lg-8 w-100\">\n        <button\n            class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-{{ $json.html_button_type }}\"\n            data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\" aria-expanded=\"true\">\n            <h5 class=\"post-title\">\n                {{ $json.domainName }} is registerd\n            </h5>\n        </button>\n        <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\">\n            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                <li>\n                  <b>  creation date: </b> {{ $json.createdDateNormalized }}\n                </li>\n                <li>\n                  <b>  updated date: </b> {{ $json.updatedDateNormalized }} \n                </li>\n                <li>\n                  <b>  expires date: </b> {{ $json.expiresDateNormalized }} \n                </li>\n                <li>\n                  <b> registrant country: </b> {{ $json.WhoisRecord.registryData.registrant.country}} \n                </li>\n                <li>\n                  <b>  dataError: </b> {{ $json.dataError }}\n                </li>\n                <li class=\"mb-1\">\n                    <button class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-outline-dark\"\n                        data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\"\n                        aria-expanded=\"false\">\n                        Full XML API response\n                    </button>\n                    <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\">\n                        <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                        \n                            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                                <li > \n\n                                   <div class=\"text-wrap\">  \n\n                                        <!-- Restante do seu conteúdo vai aqui -->\n                                        <pre id=\"xml-container_{{ $json.domain_name_to_test_transformation_no_dot }}\"></pre>\n\n                                        <script>\n                                            var xmlString ='  {{ $json.whois_xml_response }} ';\n\n                                            // Função para destacar as partes do XML\n                                            function highlightXML(xmlString) {\n                                                return xmlString.replace(/<([^\\s>]+)([^>]*)>([^<]*)<\\/\\1>/g, function (match, tag, attributes, text) {\n                                                    var highlightedTag = '<span class=\"xml-tag\">&lt;' + tag + '</span>';\n                                                    var highlightedAttributes = attributes ? '<span class=\"xml-attribute\">' + attributes + '</span>' : '';\n                                                    var highlightedText = text ? '<span class=\"xml-text\">' + text + '</span>' : '';\n                                                    return highlightedTag + highlightedAttributes + highlightedText + '<span class=\"xml-tag\">&lt;/' + tag + '&gt;</span>';\n                                                });\n                                            }\n                                            // Exibe o XML na página com destaque\n                                            document.getElementById('xml-container_{{ $json.domain_name_to_test_transformation_no_dot }}').innerHTML = highlightXML(xmlString);  \n\n                                        </script>\n                                    </div>\n\n\n                                </li>\n                            </ul>\n\n                        </ul>\n\n\n                    </div>\n                </li>\n            </ul>\n        </div>\n\n        <hr style=\"margin-top: 0.3rem; margin-bottom: 0.3rem;\">\n    </div>\n</div>"
      },
      "id": "257c8830-691e-4682-816e-c43601896fb6",
      "name": "HTML2",
      "type": "n8n-nodes-base.html",
      "typeVersion": 1,
      "position": [
        1500,
        1240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.WhoisRecord.dataError }}",
              "value2": "INVALID_TLD"
            }
          ]
        }
      },
      "id": "9504d8c3-67c8-425a-bc75-4b03805c6dd2",
      "name": "IF INVALID_TLD",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        800,
        1860
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domain_name_to_test",
              "stringValue": "={{ $('input').item.json.output_domain_name }}"
            }
          ]
        },
        "options": {}
      },
      "id": "50f6fdea-da79-4711-b6c2-67a3e1c1d06b",
      "name": "flow_data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        300,
        440
      ]
    },
    {
      "parameters": {},
      "id": "3e11c90d-a2cb-4487-9cd7-4fd2811f209a",
      "name": "When clicking \"Execute Workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        120,
        140
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "23420369-aeab-435b-8bf8-674631a70ee0",
      "name": "convert to Json",
      "type": "n8n-nodes-base.xml",
      "typeVersion": 1,
      "position": [
        1300,
        140
      ]
    },
    {
      "parameters": {
        "url": "=https://www.whoisxmlapi.com/whoisserver/WhoisService?apiKey={{ $json.whoisxmlapi_api_key }}&domainName={{ $json.domain_name_to_test }}&da=2&ip=1",
        "options": {}
      },
      "id": "46fea935-20c8-42d2-9b9a-42b298f38982",
      "name": "HTTP_Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1020,
        140
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domain_name_to_test",
              "stringValue": "=myotis.com"
            }
          ]
        },
        "options": {}
      },
      "id": "c63ae228-c8a7-4e86-914c-135f076246ea",
      "name": "debug_data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        300,
        140
      ]
    },
    {
      "parameters": {
        "content": "## Manual debug start",
        "height": 251.1678059984191,
        "width": 440.8334277066623
      },
      "id": "04b0c7bd-214c-47d3-b3e1-48c6b99460f2",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        80
      ]
    },
    {
      "parameters": {
        "content": "## n8n Call",
        "height": 248.64878569203384,
        "width": 438.1908826052588
      },
      "id": "3ba1f819-9f96-454f-81e2-bed7735018e5",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        360
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domain_name_to_test_transformation_no_dot",
              "stringValue": "={{ $json.domain_name_to_test.replace('.','_') }}"
            },
            {
              "name": "whoisxmlapi_api_key",
              "stringValue": "at_U2WK0ctU10OJSG6ZVAlbQCeceU7KE"
            }
          ]
        },
        "options": {}
      },
      "id": "ab3986e9-2e5e-4943-a5f0-b97c7245ff06",
      "name": "combined_flow_data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        700,
        280
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domainName",
              "stringValue": "={{ $json.WhoisRecord.domainName }}"
            },
            {
              "name": "dataError",
              "stringValue": "={{ $json.WhoisRecord.registryData.dataError }}"
            },
            {
              "name": "registrant_country",
              "stringValue": "={{ $json.WhoisRecord.registryData.registrant.country }}"
            },
            {
              "name": "createdDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.createdDateNormalized }}"
            },
            {
              "name": "updatedDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.updatedDateNormalized }}"
            },
            {
              "name": "expiresDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.expiresDateNormalized }}"
            },
            {
              "name": "html_button_type",
              "stringValue": "outline-danger"
            },
            {
              "name": "whois_xml_response ",
              "stringValue": "={{ $('HTTP_Request').item.json.data.replace(/[\\r\\n]+/g,'\\\\n')  }}"
            },
            {
              "name": "domain_name_to_test_transformation_no_dot",
              "stringValue": "={{ $('combined_flow_data').item.json[\"domain_name_to_test_transformation_no_dot\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4fec2ccf-d025-411e-97e0-3e12eb6e2395",
      "name": "ETL2_v2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        1020,
        1840
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domainName",
              "stringValue": "={{ $json.WhoisRecord.domainName }}"
            },
            {
              "name": "dataError",
              "stringValue": "={{ $json.WhoisRecord.registryData.dataError }}"
            },
            {
              "name": "registrant_country",
              "stringValue": "={{ $json.WhoisRecord.registryData.registrant.country }}"
            },
            {
              "name": "createdDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.createdDateNormalized }}"
            },
            {
              "name": "updatedDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.updatedDateNormalized }}"
            },
            {
              "name": "expiresDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.expiresDateNormalized }}"
            },
            {
              "name": "html_button_type",
              "stringValue": "outline-danger"
            },
            {
              "name": "whois_xml_response",
              "stringValue": "={{ $('HTTP_Request').item.json.data.replace(/[\\r\\n]+/g,'\\\\n')  }}"
            },
            {
              "name": "domain_name_to_test_transformation_no_dot",
              "stringValue": "={{ $('combined_flow_data').item.json[\"domain_name_to_test_transformation_no_dot\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1c742bca-312b-40b4-bd51-b9a929b1f171",
      "name": "ETL1_v2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        640,
        1620
      ]
    },
    {
      "parameters": {
        "url": "=https://www.whoisxmlapi.com/whoisserver/WhoisService?apiKey={{ $json.whoisxmlapi_api_key }}&domainName={{ $json.domain_name_to_test }}&da=2&ip=1",
        "options": {}
      },
      "id": "794aa5f1-931f-4145-995e-1ad0ea71d50a",
      "name": "HTTP_Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1020,
        360
      ],
      "disabled": true
    },
    {
      "parameters": {
        "html": "\n\n<div class=\"row\">\n    <div class=\"col-md-10 col-lg-8 w-100\">\n        <button\n            class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-{{ $json.html_button_type }}\"\n            data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\" aria-expanded=\"true\">\n            <h5 class=\"post-title\">\n                {{ $json.domainName }} Is free to register\n            </h5>\n        </button>\n        <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\">\n            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                <li>\n              sem dados\n                </li>\n                <li class=\"mb-1\">\n                    <button class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-outline-dark\"\n                        data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\"\n                        aria-expanded=\"false\">\n                        Full XML API response\n                    </button>\n                    <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\">\n                        <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                        \n                            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                                <li > \n\n                                   <div class=\"text-wrap\">  \n\n                                        <!-- Restante do seu conteúdo vai aqui -->\n                                        <pre id=\"xml-container_{{ $json.domain_name_to_test_transformation_no_dot }}\"></pre>\n\n                                        <script>\n                                            var xmlString ='  {{ $json.whois_xml_response }} ';\n\n                                            // Função para destacar as partes do XML\n                                            function highlightXML(xmlString) {\n                                                return xmlString.replace(/<([^\\s>]+)([^>]*)>([^<]*)<\\/\\1>/g, function (match, tag, attributes, text) {\n                                                    var highlightedTag = '<span class=\"xml-tag\">&lt;' + tag + '</span>';\n                                                    var highlightedAttributes = attributes ? '<span class=\"xml-attribute\">' + attributes + '</span>' : '';\n                                                    var highlightedText = text ? '<span class=\"xml-text\">' + text + '</span>' : '';\n                                                    return highlightedTag + highlightedAttributes + highlightedText + '<span class=\"xml-tag\">&lt;/' + tag + '&gt;</span>';\n                                                });\n                                            }\n                                            // Exibe o XML na página com destaque\n                                            document.getElementById('xml-container_{{ $json.domain_name_to_test_transformation_no_dot }}').innerHTML = highlightXML(xmlString);  \n\n                                        </script>\n                                    </div>\n\n\n                                </li>\n                            </ul>\n\n                        </ul>\n\n\n                    </div>\n                </li>\n            </ul>\n        </div>\n\n        <hr style=\"margin-top: 0.3rem; margin-bottom: 0.3rem;\">\n    </div>\n</div>"
      },
      "id": "a76430d6-c170-453d-a1ca-6b06bb6fb5c8",
      "name": "HTML3",
      "type": "n8n-nodes-base.html",
      "typeVersion": 1,
      "position": [
        880,
        760
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domainName",
              "stringValue": "={{ $json.WhoisRecord.domainName }}"
            },
            {
              "name": "dataError",
              "stringValue": "={{ $json.WhoisRecord.registryData.dataError }}"
            },
            {
              "name": "registrant_country",
              "stringValue": "={{ $json.WhoisRecord.registryData.registrant.country }}"
            },
            {
              "name": "createdDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.createdDateNormalized }}"
            },
            {
              "name": "updatedDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.updatedDateNormalized }}"
            },
            {
              "name": "expiresDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.expiresDateNormalized }}"
            },
            {
              "name": "html_button_type",
              "stringValue": "success"
            },
            {
              "name": "whois_xml_response",
              "stringValue": "={{ $('HTTP_Request').item.json.data.replace(/[\\r\\n]+/g,'\\\\n')  }}"
            },
            {
              "name": "domain_name_to_test_transformation_no_dot",
              "stringValue": "={{ $('combined_flow_data').item.json[\"domain_name_to_test_transformation_no_dot\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "da299ab9-1664-49bc-9e0e-82985fab7efe",
      "name": "ETL1_v",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        740,
        760
      ]
    },
    {
      "parameters": {
        "content": "the domain exists",
        "height": 349.30531989052844,
        "width": 2303.68742695672
      },
      "id": "caa213e1-998f-44b7-8d1a-0deb0b6c2c21",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        1060
      ]
    },
    {
      "parameters": {
        "content": "ERROR",
        "height": 718.5323145988943,
        "width": 2306.0747623727875
      },
      "id": "aaf57dca-8171-4189-aba0-2741941f9d00",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        1440
      ]
    },
    {
      "parameters": {
        "content": "the domain does not exists",
        "height": 349.3053198905284,
        "width": 2302.7374416582416
      },
      "id": "9e7cfcb0-e166-4dfa-93e3-9406dd07f033",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.WhoisRecord.domainAvailability }}",
              "value2": "AVAILABLE"
            }
          ]
        }
      },
      "id": "df757bd0-3c06-4dc0-a4b4-bf54206dcb5a",
      "name": "IF domainAvailability AVAILABLE",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        140,
        780
      ]
    },
    {
      "parameters": {
        "content": "Dominio premium ou ja registado",
        "height": 399.8170283355138,
        "width": 2312.984693718711
      },
      "id": "ab0680d9-afc2-4170-8f8f-d091b7423611",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        2180
      ]
    },
    {
      "parameters": {},
      "id": "11b327c6-9049-42ad-ad32-21e40df6c3d7",
      "name": "TODO: if NOT pertence a algum revendedor",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1120,
        1120
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domainName",
              "stringValue": "={{ $json.WhoisRecord.domainName }}"
            },
            {
              "name": "dataError",
              "stringValue": "={{ $json.WhoisRecord.registryData.dataError }}"
            },
            {
              "name": "registrant_country",
              "stringValue": "={{ $json.WhoisRecord.registryData.registrant.country }}"
            },
            {
              "name": "createdDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.createdDateNormalized }}"
            },
            {
              "name": "updatedDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.updatedDateNormalized }}"
            },
            {
              "name": "expiresDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.expiresDateNormalized }}"
            },
            {
              "name": "html_button_type",
              "stringValue": "warning"
            },
            {
              "name": "whois_xml_response",
              "stringValue": "={{ $('HTTP_Request').item.json.data.replace(/[\\r\\n]+/g,'\\\\n')  }}"
            },
            {
              "name": "domain_name_to_test_transformation_no_dot",
              "stringValue": "={{ $('combined_flow_data').item.json[\"domain_name_to_test_transformation_no_dot\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b3efadc2-2d33-4d6b-9029-1fe716cd3555",
      "name": "ETL",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        1740,
        2300
      ]
    },
    {
      "parameters": {
        "html": "\n\n<div class=\"row\">\n    <div class=\"col-md-10 col-lg-8 w-100\">\n        <button\n            class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-{{ $json.html_button_type }}\"\n            data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\" aria-expanded=\"true\">\n            <h5 class=\"post-title\">\n                {{ $json.domainName }} is registerd\n            </h5>\n        </button>\n        <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\">\n            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                <li>\n                  <b>  creation date: </b> {{ $json.createdDateNormalized }}\n                </li>\n                <li>\n                  <b>  updated date: </b> {{ $json.updatedDateNormalized }} \n                </li>\n                <li>\n                  <b>  expires date: </b> {{ $json.expiresDateNormalized }} \n                </li>\n                <li>\n                  <b> registrant country: </b> {{ $json.WhoisRecord.registryData.registrant.country}} \n                </li>\n                <li>\n                  <b>  dataError: </b> {{ $json.dataError }}\n                </li>\n                <li class=\"mb-1\">\n                    <button class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-outline-dark\"\n                        data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\"\n                        aria-expanded=\"false\">\n                        Full XML API response\n                    </button>\n                    <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\">\n                        <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                        \n                            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                                <li > \n\n                                   <div class=\"text-wrap\">  \n\n                                        <!-- Restante do seu conteúdo vai aqui -->\n                                        <pre id=\"xml-container_{{ $json.domain_name_to_test_transformation_no_dot }}\"></pre>\n\n                                        <script>\n                                            var xmlString ='  {{ $json.whois_xml_response }} ';\n\n                                            // Função para destacar as partes do XML\n                                            function highlightXML(xmlString) {\n                                                return xmlString.replace(/<([^\\s>]+)([^>]*)>([^<]*)<\\/\\1>/g, function (match, tag, attributes, text) {\n                                                    var highlightedTag = '<span class=\"xml-tag\">&lt;' + tag + '</span>';\n                                                    var highlightedAttributes = attributes ? '<span class=\"xml-attribute\">' + attributes + '</span>' : '';\n                                                    var highlightedText = text ? '<span class=\"xml-text\">' + text + '</span>' : '';\n                                                    return highlightedTag + highlightedAttributes + highlightedText + '<span class=\"xml-tag\">&lt;/' + tag + '&gt;</span>';\n                                                });\n                                            }\n                                            // Exibe o XML na página com destaque\n                                            document.getElementById('xml-container_{{ $json.domain_name_to_test_transformation_no_dot }}').innerHTML = highlightXML(xmlString);  \n\n                                        </script>\n                                    </div>\n\n\n                                </li>\n                            </ul>\n\n                        </ul>\n\n\n                    </div>\n                </li>\n            </ul>\n        </div>\n\n        <hr style=\"margin-top: 0.3rem; margin-bottom: 0.3rem;\">\n    </div>\n</div>"
      },
      "id": "bfe0b8a7-3a26-4749-bbc3-34f6634b4911",
      "name": "HTML4",
      "type": "n8n-nodes-base.html",
      "typeVersion": 1,
      "position": [
        1920,
        2300
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.myNewField = 1;\n}\n\nreturn $input.all();"
      },
      "id": "972d315f-998e-42d1-ab1f-74b702dd7d0b",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1560,
        2300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.WhoisRecord.dataError }}",
              "value2": "INVALID_TLD"
            }
          ]
        }
      },
      "id": "7ae386c1-ed22-408d-b60a-be7627073a3a",
      "name": "IF INVALID_TLD1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        460,
        2000
      ]
    },
    {
      "parameters": {
        "model": "=text-davinci-003",
        "prompt": "=Summarise what this web page is about in a meta way in only 1 sentence.\n\n {{ $json.selftextTrimmed }}\n\n",
        "options": {
          "maxTokens": 128
        }
      },
      "id": "86f7b4f1-b752-4309-b527-71bbb643b42c",
      "name": "OpenAI Summary Backup",
      "type": "n8n-nodes-base.openAi",
      "position": [
        1820,
        1240
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "t4hevBcSqNtg7lY2",
          "name": "OpenAi account"
        }
      },
      "notes": "A one sentence summary of what the post is about."
    },
    {
      "parameters": {
        "workflowId": "detect_domain_warehouse"
      },
      "id": "a4d51c49-6f6c-46ae-8764-b00c1b0bd3f9",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        1800,
        1100
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domain_to_test",
              "stringValue": "={{ $json.domainName }}"
            }
          ]
        },
        "include": "none",
        "options": {}
      },
      "id": "176d5e5f-4c2f-4cae-8e33-3e4ea489cb29",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        1640,
        1100
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "IF MISSING_WHOIS_DATA": {
      "main": [
        [
          {
            "node": "ETL1_v2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "IF INVALID_TLD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "input": {
      "main": [
        [
          {
            "node": "flow_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ETL3": {
      "main": [
        [
          {
            "node": "OpenAI Summary Backup",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTML2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML2": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF INVALID_TLD": {
      "main": [
        [
          {
            "node": "ETL2_v2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "TODO: if NOT pertence a algum revendedor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "flow_data": {
      "main": [
        [
          {
            "node": "combined_flow_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking \"Execute Workflow\"": {
      "main": [
        [
          {
            "node": "debug_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert to Json": {
      "main": [
        [
          {
            "node": "IF domainAvailability AVAILABLE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP_Request": {
      "main": [
        [
          {
            "node": "convert to Json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "debug_data": {
      "main": [
        [
          {
            "node": "combined_flow_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "combined_flow_data": {
      "main": [
        [
          {
            "node": "HTTP_Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP_Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ETL2_v2": {
      "main": [
        [
          {
            "node": "HTML1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ETL1_v2": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ETL1_v": {
      "main": [
        [
          {
            "node": "HTML3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML3": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF domainAvailability AVAILABLE": {
      "main": [
        [
          {
            "node": "IF INVALID_TLD1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "IF MISSING_WHOIS_DATA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TODO: if NOT pertence a algum revendedor": {
      "main": [
        [
          {
            "node": "ETL3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ETL": {
      "main": [
        [
          {
            "node": "HTML4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML4": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "ETL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF INVALID_TLD1": {
      "main": [
        [
          {
            "node": "ETL2_v2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ETL1_v",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "executionOrder": "v1"
  },
  "versionId": "98ef2569-41bd-4dc7-870f-46c99d070ba4",
  "id": "xFxSTMFvjc3O90P3",
  "meta": {
    "instanceId": "9367b2af08e9ff6a8e91f8997d59b421f3a6d2d63dad9ad9e3e79d764c423975"
  },
  "tags": [
    {
      "createdAt": "2023-07-11T04:05:40.057Z",
      "updatedAt": "2023-12-09T17:25:06.741Z",
      "id": "4",
      "name": "status>>working"
    },
    {
      "createdAt": "2023-12-09T05:07:30.848Z",
      "updatedAt": "2023-12-09T17:23:58.618Z",
      "id": "bSUjcwEppGkp1fuy",
      "name": "env>>production"
    },
    {
      "createdAt": "2023-11-28T12:49:13.352Z",
      "updatedAt": "2023-12-09T17:24:25.329Z",
      "id": "siPs4JzBSSUVpks6",
      "name": "project>>branding"
    }
  ]
}