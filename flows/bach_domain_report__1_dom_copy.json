{
  "name": "bach_domain_report: 1 dom copy",
  "nodes": [
    {
      "parameters": {
        "content": "## Data extraction\n",
        "height": 520.8658476268888,
        "width": 784.4901982869746
      },
      "id": "d5dce561-fb53-4887-8bc8-4f32e940841c",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        540,
        80
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.WhoisRecord.dataError }}",
              "value2": "MISSING_WHOIS_DATA"
            }
          ]
        }
      },
      "id": "2570961a-eec9-4ec6-a4d6-e7d520d0b3b7",
      "name": "IF MISSING_WHOIS_DATA",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        680,
        1740
      ]
    },
    {
      "parameters": {},
      "id": "1b8df513-ff5d-4261-a5cd-078a5335fc03",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2860,
        1200
      ]
    },
    {
      "parameters": {},
      "id": "28edd0cf-1073-4938-9037-d3c7fec437af",
      "name": "input",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        100,
        440
      ]
    },
    {
      "parameters": {
        "content": "# Domain whois extraction and ETL (not an executable flow)\n\n## input:\n- debug_name_to_test\n\n## parameters:\n- whoisxmlapi_api_key\n\n## output:\n- whois data",
        "height": 341.6946081485854,
        "width": 1626.2510790844776
      },
      "id": "0872aeba-f481-4a6e-9f8f-51002609dfbb",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        -280
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domainName",
              "stringValue": "={{ $json.WhoisRecord.domainName }}"
            },
            {
              "name": "dataError",
              "stringValue": "={{ $json.WhoisRecord.registryData.dataError }}"
            },
            {
              "name": "registrant_country",
              "stringValue": "={{ $json.WhoisRecord.registryData.registrant.country }}"
            },
            {
              "name": "createdDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.createdDateNormalized }}"
            },
            {
              "name": "updatedDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.updatedDateNormalized }}"
            },
            {
              "name": "expiresDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.expiresDateNormalized }}"
            },
            {
              "name": "html_button_type",
              "stringValue": "danger"
            },
            {
              "name": "whois_xml_response",
              "stringValue": "={{ $('HTTP_Request').item.json.data.replace(/[\\r\\n]+/g,'\\\\n')  }}"
            },
            {
              "name": "domain_name_to_test_transformation_no_dot",
              "stringValue": "={{ $('combined_flow_data').item.json[\"domain_name_to_test_transformation_no_dot\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7775cd90-c065-47d5-aeef-048a58701d49",
      "name": "ETL3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        1580,
        1200
      ]
    },
    {
      "parameters": {
        "html": "\n\n<div class=\"row\">\n    <div class=\"col-md-10 col-lg-8 w-100\">\n        <button\n            class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-{{ $json.html_button_type }}\"\n            data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\" aria-expanded=\"true\">\n            <h5 class=\"post-title\">\n                {{ $json.domainName }} missing data\n            </h5>\n        </button>\n        <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\">\n            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                <li>\n                  <b>  creation date: </b> {{ $json.createdDateNormalized }}\n                </li>\n                <li>\n                  <b>  updated date: </b> {{ $json.updatedDateNormalized }} \n                </li>\n                <li>\n                  <b>  expires date: </b> {{ $json.expiresDateNormalized }} \n                </li>\n                <li>\n                  <b> registrant country: </b> {{ $json.WhoisRecord.registryData.registrant.country}} \n                </li>\n                <li class=\"mb-1\">\n                    <button class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-outline-dark\"\n                        data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\"\n                        aria-expanded=\"false\">\n                        Full XML API response\n                    </button>\n                    <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\">\n                        <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                        \n                            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                                <li > \n\n                                   <div class=\"text-wrap\">  \n\n                                        <!-- Restante do seu conteúdo vai aqui -->\n                                        <pre id=\"xml-container2\"></pre>\n\n                                        <script>\n                                            var xmlString ='  {{ $json.whois_xml_response }} ';\n\n                                            // Função para destacar as partes do XML\n                                            function highlightXML(xmlString) {\n                                                return xmlString.replace(/<([^\\s>]+)([^>]*)>([^<]*)<\\/\\1>/g, function (match, tag, attributes, text) {\n                                                    var highlightedTag = '<span class=\"xml-tag\">&lt;' + tag + '</span>';\n                                                    var highlightedAttributes = attributes ? '<span class=\"xml-attribute\">' + attributes + '</span>' : '';\n                                                    var highlightedText = text ? '<span class=\"xml-text\">' + text + '</span>' : '';\n                                                    return highlightedTag + highlightedAttributes + highlightedText + '<span class=\"xml-tag\">&lt;/' + tag + '&gt;</span>';\n                                                });\n                                            }\n                                            // Exibe o XML na página com destaque\n                                            document.getElementById('xml-container2').innerHTML = highlightXML(xmlString);  \n\n                                        </script>\n                                    </div>\n\n\n                                </li>\n                            </ul>\n\n                        </ul>\n\n\n                    </div>\n                </li>\n            </ul>\n        </div>\n\n        <hr style=\"margin-top: 0.3rem; margin-bottom: 0.3rem;\">\n    </div>\n</div>"
      },
      "id": "0332e3d5-6622-4f70-be45-7a1afccf57ad",
      "name": "HTML",
      "type": "n8n-nodes-base.html",
      "typeVersion": 1,
      "position": [
        1020,
        1720
      ]
    },
    {
      "parameters": {
        "html": "\n\n<div class=\"row\">\n    <div class=\"col-md-10 col-lg-8 w-100\">\n        <button\n            class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-{{ $json.html_button_type }}\"\n            data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\" aria-expanded=\"true\">\n            <h5 class=\"post-title\">\n                {{ $json.domainName }} an invalid domain\n            </h5>\n        </button>\n        <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\">\n            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                <li>\n                  <b>  dataError: </b> {{ $json.dataError }}\n                </li>\n\n                <li class=\"mb-1\">\n                    <button class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-outline-dark\"\n                        data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\"\n                        aria-expanded=\"false\">\n                        Full XML API response\n                    </button>\n                    <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\">\n                        <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                        \n                            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                                <li > \n\n                                   <div class=\"text-wrap\">  \n\n                                        <!-- Restante do seu conteúdo vai aqui -->\n                                        <pre id=\"xml-container2\"></pre>\n\n                                        <script>\n                                            var xmlString ='  {{ $json.whois_xml_response }} ';\n\n                                            // Função para destacar as partes do XML\n                                            function highlightXML(xmlString) {\n                                                return xmlString.replace(/<([^\\s>]+)([^>]*)>([^<]*)<\\/\\1>/g, function (match, tag, attributes, text) {\n                                                    var highlightedTag = '<span class=\"xml-tag\">&lt;' + tag + '</span>';\n                                                    var highlightedAttributes = attributes ? '<span class=\"xml-attribute\">' + attributes + '</span>' : '';\n                                                    var highlightedText = text ? '<span class=\"xml-text\">' + text + '</span>' : '';\n                                                    return highlightedTag + highlightedAttributes + highlightedText + '<span class=\"xml-tag\">&lt;/' + tag + '&gt;</span>';\n                                                });\n                                            }\n                                            // Exibe o XML na página com destaque\n                                            document.getElementById('xml-container2').innerHTML = highlightXML(xmlString);  \n\n                                        </script>\n                                    </div>\n\n\n                                </li>\n                            </ul>\n\n                        </ul>\n\n\n                    </div>\n                </li>\n            </ul>\n        </div>\n\n        <hr style=\"margin-top: 0.3rem; margin-bottom: 0.3rem;\">\n    </div>\n</div>"
      },
      "id": "c86c0e48-9074-46be-bed9-166f8ffb3731",
      "name": "HTML1",
      "type": "n8n-nodes-base.html",
      "typeVersion": 1,
      "position": [
        1420,
        1960
      ]
    },
    {
      "parameters": {
        "html": "\n\n<div class=\"row\">\n    <div class=\"col-md-10 col-lg-8 w-100\">\n        <button\n            class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-{{ $json.html_button_type }}\"\n            data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\" aria-expanded=\"true\">\n            <h5 class=\"post-title\">\n                {{ $json.domainName }} is registerd\n            </h5>\n        </button>\n        <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\">\n            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                <li>\n                  <b>  creation date: </b> {{ $json.createdDateNormalized }}\n                </li>\n                <li>\n                  <b>  updated date: </b> {{ $json.updatedDateNormalized }} \n                </li>\n                <li>\n                  <b>  expires date: </b> {{ $json.expiresDateNormalized }} \n                </li>\n                <li>\n                  <b> registrant country: </b> {{ $json.WhoisRecord.registryData.registrant.country}} \n                </li>\n                <li>\n                  <b>  dataError: </b> {{ $json.dataError }}\n                </li>\n                <li class=\"mb-1\">\n                    <button class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-outline-dark\"\n                        data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\"\n                        aria-expanded=\"false\">\n                        Full XML API response\n                    </button>\n                    <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\">\n                        <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                        \n                            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                                <li > \n\n                                   <div class=\"text-wrap\">  \n\n                                        <!-- Restante do seu conteúdo vai aqui -->\n                                        <pre id=\"xml-container2\"></pre>\n\n                                        <script>\n                                            var xmlString ='  {{ $json.whois_xml_response }} ';\n\n                                            // Função para destacar as partes do XML\n                                            function highlightXML(xmlString) {\n                                                return xmlString.replace(/<([^\\s>]+)([^>]*)>([^<]*)<\\/\\1>/g, function (match, tag, attributes, text) {\n                                                    var highlightedTag = '<span class=\"xml-tag\">&lt;' + tag + '</span>';\n                                                    var highlightedAttributes = attributes ? '<span class=\"xml-attribute\">' + attributes + '</span>' : '';\n                                                    var highlightedText = text ? '<span class=\"xml-text\">' + text + '</span>' : '';\n                                                    return highlightedTag + highlightedAttributes + highlightedText + '<span class=\"xml-tag\">&lt;/' + tag + '&gt;</span>';\n                                                });\n                                            }\n                                            // Exibe o XML na página com destaque\n                                            document.getElementById('xml-container2').innerHTML = highlightXML(xmlString);  \n\n                                        </script>\n                                    </div>\n\n\n                                </li>\n                            </ul>\n\n                        </ul>\n\n\n                    </div>\n                </li>\n            </ul>\n        </div>\n\n        <hr style=\"margin-top: 0.3rem; margin-bottom: 0.3rem;\">\n    </div>\n</div>"
      },
      "id": "600cf5bd-9137-49d2-aa46-97e450ea99e3",
      "name": "HTML2",
      "type": "n8n-nodes-base.html",
      "typeVersion": 1,
      "position": [
        1740,
        1200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.WhoisRecord.dataError }}",
              "value2": "INVALID_TLD"
            }
          ]
        }
      },
      "id": "14239352-06ad-4e9f-bb2f-30d2fa9e152e",
      "name": "IF INVALID_TLD",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1080,
        1980
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domain_name_to_test",
              "stringValue": "={{ $('input').item.json.output_domain_name }}"
            },
            {
              "name": "whoisxmlapi_api_key",
              "stringValue": "at_VPpFAzA4TeqpelJWKByi4JnAgVrlq"
            },
            {
              "name": "domain_name_to_test_transformation_no_dot",
              "stringValue": "={{ $json.domain_name_to_test.replace('.','_') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "06d69e89-1d39-41bb-9766-af9af3484b1a",
      "name": "flow_data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        580,
        440
      ]
    },
    {
      "parameters": {},
      "id": "c4d8a58f-bbf3-47f4-af7e-885575095f2e",
      "name": "When clicking \"Execute Workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        120,
        140
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "0f97832d-fb06-4c8e-992e-4ab2906d7c84",
      "name": "convert to Json",
      "type": "n8n-nodes-base.xml",
      "typeVersion": 1,
      "position": [
        60,
        1520
      ]
    },
    {
      "parameters": {
        "url": "=https://www.whoisxmlapi.com/whoisserver/WhoisService?apiKey={{ $json.whoisxmlapi_api_key }}&domainName={{ $json.domain_name_to_test }}&da=2&ip=1",
        "options": {}
      },
      "id": "67809dff-dbb4-4fdb-9d74-647c5fcf7c85",
      "name": "HTTP_Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        960,
        340
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domain_name_to_test",
              "stringValue": "=myotis.com"
            },
            {
              "name": "whoisxmlapi_api_key",
              "stringValue": "at_VPpFAzA4TeqpelJWKByi4JnAgVrlq"
            }
          ]
        },
        "options": {}
      },
      "id": "3d5cd23c-2820-486e-b63f-25042efe91ec",
      "name": "debug_data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        300,
        140
      ]
    },
    {
      "parameters": {
        "content": "## Manual debug start",
        "height": 251.1678059984191,
        "width": 440.8334277066623
      },
      "id": "6f558c1d-554f-4a7e-a3ea-2ed8adcb120b",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        80
      ]
    },
    {
      "parameters": {
        "content": "## n8n Call",
        "height": 248.64878569203384,
        "width": 438.1908826052588
      },
      "id": "ae28aaa2-9157-4739-a250-1c29e82953fb",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        360
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domain_name_to_test_transformation_no_dot",
              "stringValue": "={{ $json.domain_name_to_test.replace('.','_') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "28f2dbc9-8c21-4052-95d8-194371860458",
      "name": "combined_flow_data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        740,
        200
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domainName",
              "stringValue": "={{ $json.WhoisRecord.domainName }}"
            },
            {
              "name": "dataError",
              "stringValue": "={{ $json.WhoisRecord.registryData.dataError }}"
            },
            {
              "name": "registrant_country",
              "stringValue": "={{ $json.WhoisRecord.registryData.registrant.country }}"
            },
            {
              "name": "createdDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.createdDateNormalized }}"
            },
            {
              "name": "updatedDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.updatedDateNormalized }}"
            },
            {
              "name": "expiresDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.expiresDateNormalized }}"
            },
            {
              "name": "html_button_type",
              "stringValue": "warning"
            },
            {
              "name": "whois_xml_response",
              "stringValue": "={{ $('HTTP_Request').item.json.data.replace(/[\\r\\n]+/g,'\\\\n')  }}"
            },
            {
              "name": "domain_name_to_test_transformation_no_dot",
              "stringValue": "={{ $('combined_flow_data').item.json[\"domain_name_to_test_transformation_no_dot\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e8e4fec1-443a-45eb-a92c-fc470327c7d1",
      "name": "ETL2_v2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        1260,
        1960
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domainName",
              "stringValue": "={{ $json.WhoisRecord.domainName }}"
            },
            {
              "name": "dataError",
              "stringValue": "={{ $json.WhoisRecord.registryData.dataError }}"
            },
            {
              "name": "registrant_country",
              "stringValue": "={{ $json.WhoisRecord.registryData.registrant.country }}"
            },
            {
              "name": "createdDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.createdDateNormalized }}"
            },
            {
              "name": "updatedDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.updatedDateNormalized }}"
            },
            {
              "name": "expiresDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.expiresDateNormalized }}"
            },
            {
              "name": "html_button_type",
              "stringValue": "success"
            },
            {
              "name": "whois_xml_response",
              "stringValue": "={{ $('HTTP_Request').item.json.data.replace(/[\\r\\n]+/g,'\\\\n')  }}"
            },
            {
              "name": "domain_name_to_test_transformation_no_dot",
              "stringValue": "={{ $('combined_flow_data').item.json[\"domain_name_to_test_transformation_no_dot\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9371dbd9-0b62-4d90-8f20-d782fb91f8da",
      "name": "ETL1_v2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        860,
        1720
      ]
    },
    {
      "parameters": {
        "url": "=https://www.whoisxmlapi.com/whoisserver/WhoisService?apiKey={{ $json.whoisxmlapi_api_key }}&domainName={{ $json.domain_name_to_test }}&da=2&ip=1",
        "options": {}
      },
      "id": "1709b4e8-bf71-4624-bfa8-193147d41e23",
      "name": "HTTP_Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        940,
        140
      ],
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "0a568590-0d28-4514-ab8f-62286c85dca9",
      "name": "XML",
      "type": "n8n-nodes-base.xml",
      "typeVersion": 1,
      "position": [
        60,
        1700
      ],
      "disabled": true
    },
    {
      "parameters": {
        "html": "\n\n<div class=\"row\">\n    <div class=\"col-md-10 col-lg-8 w-100\">\n        <button\n            class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-{{ $json.html_button_type }}\"\n            data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\" aria-expanded=\"true\">\n            <h5 class=\"post-title\">\n                {{ $json.domainName }} missing data\n            </h5>\n        </button>\n        <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\">\n            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                <li>\n                  <b>  creation date: </b> {{ $json.createdDateNormalized }}\n                </li>\n                <li>\n                  <b>  updated date: </b> {{ $json.updatedDateNormalized }} \n                </li>\n                <li>\n                  <b>  expires date: </b> {{ $json.expiresDateNormalized }} \n                </li>\n                <li>\n                  <b> registrant country: </b> {{ $json.WhoisRecord.registryData.registrant.country}} \n                </li>\n                <li class=\"mb-1\">\n                    <button class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-outline-dark\"\n                        data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\"\n                        aria-expanded=\"false\">\n                        Full XML API response\n                    </button>\n                    <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\">\n                        <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                        \n                            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                                <li > \n\n                                   <div class=\"text-wrap\">  \n\n                                        <!-- Restante do seu conteúdo vai aqui -->\n                                        <pre id=\"xml-container2\"></pre>\n\n                                        <script>\n                                            var xmlString ='  {{ $json.whois_xml_response }} ';\n\n                                            // Função para destacar as partes do XML\n                                            function highlightXML(xmlString) {\n                                                return xmlString.replace(/<([^\\s>]+)([^>]*)>([^<]*)<\\/\\1>/g, function (match, tag, attributes, text) {\n                                                    var highlightedTag = '<span class=\"xml-tag\">&lt;' + tag + '</span>';\n                                                    var highlightedAttributes = attributes ? '<span class=\"xml-attribute\">' + attributes + '</span>' : '';\n                                                    var highlightedText = text ? '<span class=\"xml-text\">' + text + '</span>' : '';\n                                                    return highlightedTag + highlightedAttributes + highlightedText + '<span class=\"xml-tag\">&lt;/' + tag + '&gt;</span>';\n                                                });\n                                            }\n                                            // Exibe o XML na página com destaque\n                                            document.getElementById('xml-container2').innerHTML = highlightXML(xmlString);  \n\n                                        </script>\n                                    </div>\n\n\n                                </li>\n                            </ul>\n\n                        </ul>\n\n\n                    </div>\n                </li>\n            </ul>\n        </div>\n\n        <hr style=\"margin-top: 0.3rem; margin-bottom: 0.3rem;\">\n    </div>\n</div>"
      },
      "id": "39f3b6d4-05f6-41b4-8c65-3e5b072552e4",
      "name": "HTML3",
      "type": "n8n-nodes-base.html",
      "typeVersion": 1,
      "position": [
        720,
        860
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domainName",
              "stringValue": "={{ $json.WhoisRecord.domainName }}"
            },
            {
              "name": "dataError",
              "stringValue": "={{ $json.WhoisRecord.registryData.dataError }}"
            },
            {
              "name": "registrant_country",
              "stringValue": "={{ $json.WhoisRecord.registryData.registrant.country }}"
            },
            {
              "name": "createdDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.createdDateNormalized }}"
            },
            {
              "name": "updatedDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.updatedDateNormalized }}"
            },
            {
              "name": "expiresDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.expiresDateNormalized }}"
            },
            {
              "name": "html_button_type",
              "stringValue": "success"
            },
            {
              "name": "whois_xml_response",
              "stringValue": "={{ $('HTTP_Request').item.json.data.replace(/[\\r\\n]+/g,'\\\\n')  }}"
            },
            {
              "name": "domain_name_to_test_transformation_no_dot",
              "stringValue": "={{ $('combined_flow_data').item.json[\"domain_name_to_test_transformation_no_dot\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "cd336935-577f-49fe-b868-59a0ba422b46",
      "name": "ETL1_v",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        560,
        860
      ]
    },
    {
      "parameters": {
        "content": "the domain exists",
        "height": 349.30531989052844,
        "width": 1947.2113314293383
      },
      "id": "69f82402-a05e-44e2-939a-08d6238ea5c8",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        360,
        1160
      ]
    },
    {
      "parameters": {
        "content": "ERROR",
        "height": 718.5323145988943,
        "width": 1937.5826186815611
      },
      "id": "d2e5995c-f94b-404e-b86e-5f9627fc1432",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        360,
        1580
      ]
    },
    {
      "parameters": {
        "content": "the domain does not exists",
        "height": 349.3053198905284,
        "width": 1946.2613461308595
      },
      "id": "eadc2897-b5c4-417e-a994-95c049b7356c",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        340,
        760
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.WhoisRecord.domainAvailability }}",
              "value2": "AVAILABLE"
            }
          ]
        }
      },
      "id": "dcf8bf4d-5b01-4984-98f9-75b857d52b22",
      "name": "IF domainAvailability AVAILABLE",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        380,
        880
      ]
    },
    {
      "parameters": {
        "content": "Dominio premium ou ja registado",
        "height": 399.8170283355138,
        "width": 2312.984693718711
      },
      "id": "7e3a3af8-3434-4dc8-9efd-1e617be67d77",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        380,
        2360
      ]
    },
    {
      "parameters": {},
      "id": "0026e18c-7e3f-4e48-a7c0-746fae418aee",
      "name": "TODO: if NOT pertence a algum revendedor",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1400,
        1220
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domainName",
              "stringValue": "={{ $json.WhoisRecord.domainName }}"
            },
            {
              "name": "dataError",
              "stringValue": "={{ $json.WhoisRecord.registryData.dataError }}"
            },
            {
              "name": "registrant_country",
              "stringValue": "={{ $json.WhoisRecord.registryData.registrant.country }}"
            },
            {
              "name": "createdDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.createdDateNormalized }}"
            },
            {
              "name": "updatedDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.updatedDateNormalized }}"
            },
            {
              "name": "expiresDateNormalized",
              "stringValue": "={{ $json.WhoisRecord.registryData.expiresDateNormalized }}"
            },
            {
              "name": "html_button_type",
              "stringValue": "danger"
            },
            {
              "name": "whois_xml_response",
              "stringValue": "={{ $('HTTP_Request').item.json.data.replace(/[\\r\\n]+/g,'\\\\n')  }}"
            },
            {
              "name": "domain_name_to_test_transformation_no_dot",
              "stringValue": "={{ $('combined_flow_data').item.json[\"domain_name_to_test_transformation_no_dot\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b16f71f9-f853-487d-a179-1bbcade25841",
      "name": "ETL",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        2040,
        2520
      ]
    },
    {
      "parameters": {
        "html": "\n\n<div class=\"row\">\n    <div class=\"col-md-10 col-lg-8 w-100\">\n        <button\n            class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-{{ $json.html_button_type }}\"\n            data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\" aria-expanded=\"true\">\n            <h5 class=\"post-title\">\n                {{ $json.domainName }} is registerd\n            </h5>\n        </button>\n        <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}-collapse\">\n            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                <li>\n                  <b>  creation date: </b> {{ $json.createdDateNormalized }}\n                </li>\n                <li>\n                  <b>  updated date: </b> {{ $json.updatedDateNormalized }} \n                </li>\n                <li>\n                  <b>  expires date: </b> {{ $json.expiresDateNormalized }} \n                </li>\n                <li>\n                  <b> registrant country: </b> {{ $json.WhoisRecord.registryData.registrant.country}} \n                </li>\n                <li>\n                  <b>  dataError: </b> {{ $json.dataError }}\n                </li>\n                <li class=\"mb-1\">\n                    <button class=\"btn-xs btn-toggle d-inline-flex align-items-center rounded border-0 collapsed btn-outline-dark\"\n                        data-bs-toggle=\"collapse\" data-bs-target=\"#{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\"\n                        aria-expanded=\"false\">\n                        Full XML API response\n                    </button>\n                    <div class=\"collapse\" id=\"{{ $json.domain_name_to_test_transformation_no_dot }}lvl2-collapse\">\n                        <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                        \n                            <ul class=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                                <li > \n\n                                   <div class=\"text-wrap\">  \n\n                                        <!-- Restante do seu conteúdo vai aqui -->\n                                        <pre id=\"xml-container2\"></pre>\n\n                                        <script>\n                                            var xmlString ='  {{ $json.whois_xml_response }} ';\n\n                                            // Função para destacar as partes do XML\n                                            function highlightXML(xmlString) {\n                                                return xmlString.replace(/<([^\\s>]+)([^>]*)>([^<]*)<\\/\\1>/g, function (match, tag, attributes, text) {\n                                                    var highlightedTag = '<span class=\"xml-tag\">&lt;' + tag + '</span>';\n                                                    var highlightedAttributes = attributes ? '<span class=\"xml-attribute\">' + attributes + '</span>' : '';\n                                                    var highlightedText = text ? '<span class=\"xml-text\">' + text + '</span>' : '';\n                                                    return highlightedTag + highlightedAttributes + highlightedText + '<span class=\"xml-tag\">&lt;/' + tag + '&gt;</span>';\n                                                });\n                                            }\n                                            // Exibe o XML na página com destaque\n                                            document.getElementById('xml-container2').innerHTML = highlightXML(xmlString);  \n\n                                        </script>\n                                    </div>\n\n\n                                </li>\n                            </ul>\n\n                        </ul>\n\n\n                    </div>\n                </li>\n            </ul>\n        </div>\n\n        <hr style=\"margin-top: 0.3rem; margin-bottom: 0.3rem;\">\n    </div>\n</div>"
      },
      "id": "fed33f26-1d04-4e2f-8b81-76c838a71a71",
      "name": "HTML4",
      "type": "n8n-nodes-base.html",
      "typeVersion": 1,
      "position": [
        2220,
        2520
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.myNewField = 1;\n}\n\nreturn $input.all();"
      },
      "id": "9f716a35-563b-4fe5-a005-c7129b5257fd",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1880,
        2520
      ]
    },
    {
      "parameters": {},
      "id": "e9b40818-76d4-4c43-9a8b-9d45bda33072",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 2,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {},
      "id": "045868ac-9a6d-4c0a-bc87-e18ba8eeaa9f",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 2,
      "position": [
        780,
        460
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "IF MISSING_WHOIS_DATA": {
      "main": [
        [
          {
            "node": "ETL1_v2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "IF INVALID_TLD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "input": {
      "main": [
        [
          {
            "node": "flow_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ETL3": {
      "main": [
        [
          {
            "node": "HTML2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML2": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF INVALID_TLD": {
      "main": [
        [
          {
            "node": "ETL2_v2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "TODO: if NOT pertence a algum revendedor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "flow_data": {
      "main": [
        [
          {
            "node": "combined_flow_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking \"Execute Workflow\"": {
      "main": [
        [
          {
            "node": "debug_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert to Json": {
      "main": [
        [
          {
            "node": "IF domainAvailability AVAILABLE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP_Request": {
      "main": [
        [
          {
            "node": "convert to Json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "debug_data": {
      "main": [
        [
          {
            "node": "combined_flow_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "combined_flow_data": {
      "main": [
        [
          {
            "node": "HTTP_Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP_Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ETL2_v2": {
      "main": [
        [
          {
            "node": "HTML1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ETL1_v2": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP_Request1": {
      "main": [
        [
          {
            "node": "XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ETL1_v": {
      "main": [
        [
          {
            "node": "HTML3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML3": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF domainAvailability AVAILABLE": {
      "main": [
        [
          {
            "node": "ETL1_v",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "IF MISSING_WHOIS_DATA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TODO: if NOT pertence a algum revendedor": {
      "main": [
        [
          {
            "node": "ETL3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ETL": {
      "main": [
        [
          {
            "node": "HTML4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML4": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "ETL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "executionOrder": "v1"
  },
  "versionId": "37c650d2-db0e-45b1-bbfc-025bc150f5b5",
  "id": "veMKY5TqrHuS7LYj",
  "meta": {
    "instanceId": "9367b2af08e9ff6a8e91f8997d59b421f3a6d2d63dad9ad9e3e79d764c423975"
  },
  "tags": [
    {
      "createdAt": "2023-11-28T12:56:16.260Z",
      "updatedAt": "2023-11-28T12:56:16.260Z",
      "id": "WM0kFv1cYkbt3zJb",
      "name": "under_construction"
    },
    {
      "createdAt": "2023-11-28T12:49:13.352Z",
      "updatedAt": "2023-11-28T12:54:10.425Z",
      "id": "siPs4JzBSSUVpks6",
      "name": "Project_branding"
    }
  ]
}